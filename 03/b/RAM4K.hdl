// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[9..11],a=loada,b=loadb,c=loadc,d=loadd,e=loade,f=loadf,g=loadg,h=loadh);

    RAM512(in=in,address=address[0..8],load=loada,out=outa);
    RAM512(in=in,address=address[0..8],load=loadb,out=outb);
    RAM512(in=in,address=address[0..8],load=loadc,out=outc);
    RAM512(in=in,address=address[0..8],load=loadd,out=outd);
    RAM512(in=in,address=address[0..8],load=loade,out=oute);
    RAM512(in=in,address=address[0..8],load=loadf,out=outf);
    RAM512(in=in,address=address[0..8],load=loadg,out=outg);
    RAM512(in=in,address=address[0..8],load=loadh,out=outh);

    Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel=address[9..11],out=out);
}
